plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'com.bmuschko.docker-java-application' version '4.5.0'
    id 'java-library'
    id 'idea'
}

repositories {
    jcenter()
}

project.ext {
    springBootVersion = '2.1.3.RELEASE'
    springCloudConfigClient = '2.1.0.RELEASE'
    mapstructVersion = '1.3.0.Final'
    lombokVersion = '1.18.6'
}

project.bootJar {
    mainClassName = 'com.ktm.KtmApplication'
    archivesBaseName = 'ktm_rest'
    version = '0.0.1_RC'
    description = 'ktm'
}

project.compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

project.test {
    exclude '**/*IT.class'
    exclude '**/IntegrationTestSuite.class'
}

task integrationTest(type: Test, dependsOn: testClasses) {
    include '**/IntegrationTestSuite.class'
}

task smokeTest(type: Test) {
    include '**/SmokeTestSuite.class'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:${project.ext.springBootVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-config:${project.ext.springCloudConfigClient}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${project.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${project.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-cache:${project.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${project.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${project.ext.springBootVersion}"
    implementation "org.springframework.boot:spring-boot-configuration-processor:${project.ext.springBootVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${project.ext.springBootVersion}"
    testImplementation 'org.powermock:powermock-module-junit4:2.0.0'
    testImplementation 'org.powermock:powermock-api-mockito:1.7.4'

    runtime "org.springframework.boot:spring-boot-devtools:${project.ext.springBootVersion}"

    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation 'com.h2database:h2:1.4.198'
    implementation 'mysql:mysql-connector-java:8.0.15'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.7.0'

    implementation 'org.codehaus.groovy:groovy-all:3.0.0-alpha-4'

    implementation 'org.twitter4j:twitter4j-core:4.0.7'
    implementation 'com.google.apis:google-api-services-youtube:v3-rev206-1.25.0'
    implementation 'org.simplejavamail:simple-java-mail:5.1.3'
    implementation 'com.rometools:rome:1.12.0'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.owasp.esapi:esapi:2.1.0.1'
    implementation "org.mapstruct:mapstruct:${project.ext.mapstructVersion}"
    implementation "org.mapstruct:mapstruct-processor:${project.ext.mapstructVersion}"
    compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"

    implementation 'org.apache.pdfbox:pdfbox:2.0.13'
    implementation 'org.drools:drools-core:7.17.0.Final'
    implementation 'com.github.javafaker:javafaker:0.17.2'
    implementation 'org.apache.chemistry.opencmis:chemistry-opencmis-client-impl:1.1.0'
    implementation 'commons-cli:commons-cli:1.4'

    annotationProcessor "org.mapstruct:mapstruct-processor:${project.ext.mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${project.ext.mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
}
