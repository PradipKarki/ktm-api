buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
        springCloudConfigClient = '2.1.0.RELEASE'
        mapstructVersion = '1.3.0.Final'
        lombokVersion = '1.18.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.bmuschko.docker-java-application" version "4.5.0"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'ktm_rest'
    version = '0.0.1_RC'
    description = 'ktm'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    exclude '**/*IT.class'
    exclude '**/IntegrationTestSuite.class'
}

task integrationTest(type: Test, dependsOn: testClasses) {
    include '**/IntegrationTestSuite.class'
}

task smokeTest(type: Test) {
    include '**/SmokeTestSuite.class'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-config:${springCloudConfigClient}"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    /**
     * JUnit: The de-facto standard for unit testing Java applications.
     * Spring Test & Spring Boot Test: Utilities and integration test support for Spring Boot applications.
     * AssertJ: A fluent assertion library.
     * Hamcrest: A library of matcher objects (also known as constraints or predicates).
     * Mockito: A Java mocking framework.
     * JSONassert: An assertion library for JSON.
     * JsonPath: XPath for JSON.
     */
    testCompile 'org.powermock:powermock-module-junit4:2.0.0'
    testCompile 'org.powermock:powermock-api-mockito:1.7.4'

    runtime "org.springframework.boot:spring-boot-devtools:${springBootVersion}"

    compile 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    compile 'com.h2database:h2:1.4.198'
    compile 'mysql:mysql-connector-java:8.0.15'
    compile 'com.github.ben-manes.caffeine:caffeine:2.7.0'

    compile 'org.codehaus.groovy:groovy-all:3.0.0-alpha-4'

    compile 'org.twitter4j:twitter4j-core:4.0.7'
    compile 'com.google.apis:google-api-services-youtube:v3-rev206-1.25.0'
    compile 'org.simplejavamail:simple-java-mail:5.1.3'
    compile 'com.rometools:rome:1.12.0'

    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'

    compile 'org.apache.commons:commons-lang3:3.8.1'
    compile 'org.owasp.esapi:esapi:2.1.0.1'
    compile "org.mapstruct:mapstruct:${mapstructVersion}"
    compile "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    compile 'org.apache.pdfbox:pdfbox:2.0.13'
    compile 'org.drools:drools-core:7.17.0.Final'
    compile 'com.github.javafaker:javafaker:0.17.2'
    compile 'org.apache.chemistry.opencmis:chemistry-opencmis-client-impl:1.1.0'
    compile 'commons-cli:commons-cli:1.4'

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}
